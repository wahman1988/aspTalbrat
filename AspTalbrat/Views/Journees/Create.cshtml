@model AspTalbrat.Models.Journee

@{
    ViewData["Title"] = "Create";
}
<div class="container mt-5 " x-data="state()">
    <div class="row ">
        <div class="col-md-6 ">

            <form action="">
                @Html.AntiForgeryToken()
                <div class="card mb-1">
                    <div class="card-body">
                        <template x-if="errors">
                            <div class="alert alert-danger p-2" role="alert">
                                ERRORS
                            </div>
                        </template>
                        <div class="mb-3">
                            <label for="date" class="form-label">Date</label>
                            <input x-model="date" type="date" class="form-control">
                        </div>
                        <div class="mb-3">
                            <label for="journee" class="form-label">Journee</label>
                            <input x-model="numero" type="number" class="form-control">
                        </div>
                        <div class="mb-3">
                            <label for="notes" class="form-label">Note</label>
                            <textarea x-model="note" class="form-control"></textarea>
                        </div>
                        <hr>
                        <h5 class="card-title">Details</h5>
                        <template x-for="(field, index) in fields" :key="index">
                            <div class="row g-1">
                                <div class="col-sm-8">
                                    <input x-model="field.libelle" type="text" class="form-control"
                                           name="`libelle${index+1}`">
                                </div>
                                <div class="col-sm">
                                    <div class="input-group mb-2">
                                        <input x-model="field.montant" type="number" class="form-control"
                                               name="`montant${index+1}`" />
                                        <button class="btn btn-outline-secondary" type="button" id="button-addon2"
                                                @@click="removeField(index)">
                                            &times;
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </template>
                        <a href="javascript:void(0)"
                           @@click="addNewField()">
                            Add Row
                        </a>
                        <hr />
                        <div class="mb-3">
                            <button type="submit" class="btn btn-outline-primary float-end" @@click.prevent="postData()">Save</button>
                        </div>


                        <div>
                            <a asp-action="Index">Back to List</a>
                        </div>
                    </div>

                </div>

            </form>
        </div>
    </div>
</div>




@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        const csrfToken = document.getElementsByName('__RequestVerificationToken')[0].value;

        const config = {
            headers: {
                "HELO": "hello",
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': csrfToken
            }
        };

        function state() {
            return {
                errors: false,
                date:'',
                numero: 0,
                note: '',
                fields: [
                    {
                        libelle: 'ESP',
                        montant: 0
                    }],
                addNewField() {
                    this.fields.push({
                        libelle: '',
                        montant: 0
                    });

                },
                resetData() {
                    this.numero = '',
                    this.note ='',
                        this.fields = [
                            {
                                libelle: 'ESP',
                                montant: 0
                            }]

                },
                postData() {
                    const self = this;
                    axios.post('/Journees/Create', {
                        Date :self.date,
                        Numero: self.numero,
                        Note: self.note,
                        Paiements: self.fields

                    }, config)
                        .then(function (response) {
                            console.log(response.data);
                            if (response.data['errors'] == "errors") {
                                self.errors = true

                            } else {
                                self.errors = false
                                self.resetData()
                              window.location.href = '/Journees';
                            }
                        })
                        .catch(function (error) {
                            console.log(error);
                        });
                },
                removeField(index) {
                    console.log(index)
                    if (index > -1) {
                        this.fields.splice(index, 1);
                    }
                }
            }
        }
    </script>
}


